DECLARE @inProduct = "/Raw/AWSQLDB/DimProduct.txt";
DECLARE @inProductCategory = "/Raw/AWSQLDB/DimProductCategory.txt";
DECLARE @inProductSubCategory = "/Raw/AWSQLDB/DimProductSubcategory.txt";
DECLARE @inFactInternetSales = "/Raw/AWSQLDB/FactInternetSales.txt";
DECLARE @output = "/Transformed/AWSQLDB/4_JoinOutput.txt";

@Product =
EXTRACT [ProductKey]                int,
        [ProductAlternateKey]       string,
        [ProductSubcategoryKey]     int?,
        [WeightUnitMeasureCode]     string,
        [SizeUnitMeasureCode]       string,
        [EnglishProductName]        string,
        [SpanishProductName]        string,
        [FrenchProductName]         string,
        [StandardCost]              string,
        [FinishedGoodsFlag]         bool,
        [Color]                     string,
        [SafetyStockLevel]          int,
        [ReorderPoint]              int,
        [ListPrice]                 string,
        [Size]                      string,
        [SizeRange]                 string,
        [Weight]                    string,
        [DaysToManufacture]         int,
        [ProductLine]               string,
        [DealerPrice]               string,
        [Class]                     string,
        [Style]                     string,
        [ModelName]                 string,
        [LargePhoto]                string,
        [EnglishDescription]        string,
        [FrenchDescription]         string,
        [ChineseDescription]        string,
        [ArabicDescription]         string,
        [HebrewDescription]         string,
        [ThaiDescription]           string,
        [GermanDescription]         string,
        [JapaneseDescription]       string,
        [TurkishDescription]        string,
        [StartDate]                 DateTime,
        [EndDate]                   string,
        [Status]                    string
FROM @inProduct
USING Extractors.Text(delimiter: '|', skipFirstNRows: 1);

@ProductCategory = 
EXTRACT [ProductCategoryKey]            int,
        [ProductCategoryAlternateKey]   int,
        [EnglishProductCategoryName]    string,
        [SpanishProductCategoryName]    string,
        [FrenchProductCategoryName]     string
FROM @inProductCategory
USING Extractors.Text(delimiter: '|', skipFirstNRows: 1);

@ProductSubCategory = 
EXTRACT [ProductSubcategoryKey]             int?,
        [ProductSubcategoryAlternateKey]    int,
        [EnglishProductSubcategoryName]     string,
        [SpanishProductSubcategoryName]     string,
        [FrenchProductSubcategoryName]      string,
        [ProductCategoryKey]                int
FROM @inProductSubCategory
USING Extractors.Text(delimiter: '|', skipFirstNRows: 1);

@factInternetSales =
EXTRACT [ProductKey]                int,
        [OrderDateKey]              int,
        [DueDateKey]                int,
        [ShipDateKey]               int,
        [CustomerKey]               int,
        [PromotionKey]              int,
        [CurrencyKey]               int,
        [SalesTerritoryKey]         int,
        [SalesOrderNumber]          string,
        [SalesOrderLineNumber]      int,
        [RevisionNumber]            int,
        [OrderQuantity]             int,
        [UnitPrice]                 double,
        [ExtendedAmount]            double,
        [UnitPriceDiscountPct]      int,
        [DiscountAmount]            int,
        [ProductStandardCost]       double,
        [TotalProductCost]          double,
        [SalesAmount]               double,
        [TaxAmt]                    double,
        [Freight]                   double,
        [CarrierTrackingNumber]     string,
        [CustomerPONumber]          string,
        [OrderDate]                 DateTime,
        [DueDate]                   DateTime,
        [ShipDate]                  DateTime
FROM @inFactInternetSales
USING Extractors.Text(delimiter: '|', skipFirstNRows: 1);

@res =
SELECT p.EnglishProductName AS ProductName,
       p.StandardCost,
       pc.EnglishProductCategoryName AS ProductCategoryName,
       bcd.roadcond,
       fis.SalesAmount
FROM @factInternetSales AS fis
     INNER JOIN
        @Product AS p
     ON fis.ProductKey == p.ProductKey
     INNER JOIN
        @ProductSubCategory AS psc
     ON psc.ProductSubcategoryKey == p.ProductSubcategoryKey
     INNER JOIN
        @ProductCategory AS pc
     ON psc.ProductCategoryKey == pc.ProductCategoryKey
     INNER JOIN
        BikeCollisionData AS bcd
    ON pc.EnglishProductCategoryName == bcd.joinKey
GROUP BY p.EnglishProductName, p.StandardCost, pc.EnglishProductCategoryName, bcd.roadcond, fis.SalesAmount;

OUTPUT @res
TO @output
USING Outputters.Text(delimiter : '|', outputHeader : true);